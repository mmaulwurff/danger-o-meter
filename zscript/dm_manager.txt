class DM_Manager
{

  DM_Manager init()
  {
    _dangerSources.push(new("DM_ProjectileDangerSource"));
    _dangerSources.push(new("DM_EnemiesDangerSource"));

    return self;
  }

  void update(Actor player, out DM_State result)
  {
    double dangerValue          = 0.0;
    double potentialDangerValue = 0.0;

    let   iterator = ThinkerIterator.Create();
    Actor a;

    int nDangerSources = _dangerSources.size();
    double d, p;

    while (a = Actor(iterator.Next()))
    {
      double distance = player.Distance3D(a);
      if (distance == 0)          { continue; }
      if (distance > checkRadius) { continue; }

      for (int i = 0; i < nDangerSources; ++i)
      {
        [d, p] = _dangerSources[i].CalculateCurrentDangerValue(player, a, distance);
        dangerValue          += d;
        potentialDangerValue += p;
      }
    }

    result.dangerValue          = dangerValue;
    result.potentialDangerValue = potentialDangerValue;
  }

  // private attributes section ////////////////////////////////////////////////

  private Array<DM_DangerSource> _dangerSources;

  // private constants section /////////////////////////////////////////////////

  const checkRadius = 1000.0;

} // class DM_Manager
